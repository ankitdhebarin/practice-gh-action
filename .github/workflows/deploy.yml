name: Workflow 1
on: push
jobs:
    Lint:
        runs-on: ubuntu-latest
        steps:
            - name: Download Code
              uses: actions/checkout@v4
            - name: Install NodeJS
              uses: actions/setup-node@v4
              with:
                node-version: 18
            - name: Cache dependencies
              id: cache
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install dependencies
              run: npm ci
            - name: Lint Code
              run: npm test
    Build:
        needs: Lint
        runs-on: ubuntu-latest
        outputs:
            script-file: ${{ steps.publish.outputs.script-file }}
        steps:
            - name: Download Code
              uses: actions/checkout@v4
            - name: Install NodeJS
              uses: actions/setup-node@v4
              with:
                node-version: 18
            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: ./npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install dependencies
              run: npm ci
            - name: Install dependencies
              run: npm run build
            - name: Publish files to Output
              id : publish
              run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: dist-artifact
                path: dist
    deploy:
        needs: Build
        uses: ./.github/workflows/reusable.yml
        with:
            artifact-name: dist-artifact
    print-deploy-results:
        needs: deploy
        runs-on: ubuntu-latest
        steps:
            - name: Print output
              run: echo "${{ needs.deploy.outputs.result }}"
        # runs-on: ubuntu-latest
        # steps:
        #     - name: Downloading artifacts
        #       uses: actions/download-artifact@v4
        #       with:
        #         name: dist-artifact
        #     - name: Output Artifacts
        #       run: ls
        #     - name: Output filename
        #       run: echo "${{ needs.Build.outputs.script-file}}"
        #     - name: Deploy changes
        #       run: echo "Deploying..."